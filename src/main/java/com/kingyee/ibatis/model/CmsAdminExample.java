package com.kingyee.ibatis.model;

import java.util.ArrayList;
import java.util.List;

public class CmsAdminExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public CmsAdminExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andUseridIsNull() {
			addCriterion("userid is null");
			return (Criteria) this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("userid is not null");
			return (Criteria) this;
		}

		public Criteria andUseridEqualTo(Integer value) {
			addCriterion("userid =", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotEqualTo(Integer value) {
			addCriterion("userid <>", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThan(Integer value) {
			addCriterion("userid >", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
			addCriterion("userid >=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThan(Integer value) {
			addCriterion("userid <", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThanOrEqualTo(Integer value) {
			addCriterion("userid <=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridIn(List<Integer> values) {
			addCriterion("userid in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotIn(List<Integer> values) {
			addCriterion("userid not in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridBetween(Integer value1, Integer value2) {
			addCriterion("userid between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotBetween(Integer value1, Integer value2) {
			addCriterion("userid not between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("username is null");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("username is not null");
			return (Criteria) this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("username =", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("username <>", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("username >", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("username >=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("username <", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("username <=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("username like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("username not like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameIn(List<String> values) {
			addCriterion("username in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotIn(List<String> values) {
			addCriterion("username not in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("username between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("username not between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginIsNull() {
			addCriterion("allowmultilogin is null");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginIsNotNull() {
			addCriterion("allowmultilogin is not null");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginEqualTo(Boolean value) {
			addCriterion("allowmultilogin =", value, "allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginNotEqualTo(Boolean value) {
			addCriterion("allowmultilogin <>", value, "allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginGreaterThan(Boolean value) {
			addCriterion("allowmultilogin >", value, "allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginGreaterThanOrEqualTo(Boolean value) {
			addCriterion("allowmultilogin >=", value, "allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginLessThan(Boolean value) {
			addCriterion("allowmultilogin <", value, "allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginLessThanOrEqualTo(Boolean value) {
			addCriterion("allowmultilogin <=", value, "allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginIn(List<Boolean> values) {
			addCriterion("allowmultilogin in", values, "allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginNotIn(List<Boolean> values) {
			addCriterion("allowmultilogin not in", values, "allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginBetween(Boolean value1, Boolean value2) {
			addCriterion("allowmultilogin between", value1, value2,
					"allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAllowmultiloginNotBetween(Boolean value1,
				Boolean value2) {
			addCriterion("allowmultilogin not between", value1, value2,
					"allowmultilogin");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordIsNull() {
			addCriterion("alloweditpassword is null");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordIsNotNull() {
			addCriterion("alloweditpassword is not null");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordEqualTo(Boolean value) {
			addCriterion("alloweditpassword =", value, "alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordNotEqualTo(Boolean value) {
			addCriterion("alloweditpassword <>", value, "alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordGreaterThan(Boolean value) {
			addCriterion("alloweditpassword >", value, "alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordGreaterThanOrEqualTo(Boolean value) {
			addCriterion("alloweditpassword >=", value, "alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordLessThan(Boolean value) {
			addCriterion("alloweditpassword <", value, "alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordLessThanOrEqualTo(Boolean value) {
			addCriterion("alloweditpassword <=", value, "alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordIn(List<Boolean> values) {
			addCriterion("alloweditpassword in", values, "alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordNotIn(List<Boolean> values) {
			addCriterion("alloweditpassword not in", values,
					"alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordBetween(Boolean value1,
				Boolean value2) {
			addCriterion("alloweditpassword between", value1, value2,
					"alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andAlloweditpasswordNotBetween(Boolean value1,
				Boolean value2) {
			addCriterion("alloweditpassword not between", value1, value2,
					"alloweditpassword");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginIsNull() {
			addCriterion("editpasswordnextlogin is null");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginIsNotNull() {
			addCriterion("editpasswordnextlogin is not null");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginEqualTo(Boolean value) {
			addCriterion("editpasswordnextlogin =", value,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginNotEqualTo(Boolean value) {
			addCriterion("editpasswordnextlogin <>", value,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginGreaterThan(Boolean value) {
			addCriterion("editpasswordnextlogin >", value,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginGreaterThanOrEqualTo(
				Boolean value) {
			addCriterion("editpasswordnextlogin >=", value,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginLessThan(Boolean value) {
			addCriterion("editpasswordnextlogin <", value,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginLessThanOrEqualTo(Boolean value) {
			addCriterion("editpasswordnextlogin <=", value,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginIn(List<Boolean> values) {
			addCriterion("editpasswordnextlogin in", values,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginNotIn(List<Boolean> values) {
			addCriterion("editpasswordnextlogin not in", values,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginBetween(Boolean value1,
				Boolean value2) {
			addCriterion("editpasswordnextlogin between", value1, value2,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andEditpasswordnextloginNotBetween(Boolean value1,
				Boolean value2) {
			addCriterion("editpasswordnextlogin not between", value1, value2,
					"editpasswordnextlogin");
			return (Criteria) this;
		}

		public Criteria andDisabledIsNull() {
			addCriterion("disabled is null");
			return (Criteria) this;
		}

		public Criteria andDisabledIsNotNull() {
			addCriterion("disabled is not null");
			return (Criteria) this;
		}

		public Criteria andDisabledEqualTo(Boolean value) {
			addCriterion("disabled =", value, "disabled");
			return (Criteria) this;
		}

		public Criteria andDisabledNotEqualTo(Boolean value) {
			addCriterion("disabled <>", value, "disabled");
			return (Criteria) this;
		}

		public Criteria andDisabledGreaterThan(Boolean value) {
			addCriterion("disabled >", value, "disabled");
			return (Criteria) this;
		}

		public Criteria andDisabledGreaterThanOrEqualTo(Boolean value) {
			addCriterion("disabled >=", value, "disabled");
			return (Criteria) this;
		}

		public Criteria andDisabledLessThan(Boolean value) {
			addCriterion("disabled <", value, "disabled");
			return (Criteria) this;
		}

		public Criteria andDisabledLessThanOrEqualTo(Boolean value) {
			addCriterion("disabled <=", value, "disabled");
			return (Criteria) this;
		}

		public Criteria andDisabledIn(List<Boolean> values) {
			addCriterion("disabled in", values, "disabled");
			return (Criteria) this;
		}

		public Criteria andDisabledNotIn(List<Boolean> values) {
			addCriterion("disabled not in", values, "disabled");
			return (Criteria) this;
		}

		public Criteria andDisabledBetween(Boolean value1, Boolean value2) {
			addCriterion("disabled between", value1, value2, "disabled");
			return (Criteria) this;
		}

		public Criteria andDisabledNotBetween(Boolean value1, Boolean value2) {
			addCriterion("disabled not between", value1, value2, "disabled");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table cms_admin
	 * @mbggenerated  Sun Jan 26 16:55:55 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cms_admin
     *
     * @mbggenerated do_not_delete_during_merge Sun Jan 26 16:05:46 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}